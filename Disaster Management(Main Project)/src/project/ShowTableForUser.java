/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Hasnath Jami
 */
public class ShowTableForUser extends javax.swing.JFrame {

    /**
     * Creates new form ShowTableForUser
     */
    public ShowTableForUser() {
        initComponents();
        showUser();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Show_User_Table = new javax.swing.JTable();
        searchTextFieldRegion = new javax.swing.JTextField();
        searchTextFieldDisasterType = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        Year1Label = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        Year2Label = new javax.swing.JLabel();
        TypeLabel = new javax.swing.JLabel();
        searchTextFieldYearRange1 = new javax.swing.JTextField();
        Selector = new javax.swing.JComboBox<>();
        searchTextFieldYearRange2 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        RegionLabel = new javax.swing.JLabel();
        returnHomeFromUser = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Show_User_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Disaster Id", "Disaster Name", "Disaster Type", "Region Name", "Injured", "Missing", "Death", "TotalRelief", "ContributingCountries", "Year", "Economic Damage"
            }
        ));
        Show_User_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Show_User_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Show_User_Table);

        searchTextFieldRegion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchTextFieldRegion.setForeground(new java.awt.Color(51, 51, 51));
        searchTextFieldRegion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        searchTextFieldRegion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldRegionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldRegionFocusLost(evt);
            }
        });

        searchTextFieldDisasterType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchTextFieldDisasterType.setForeground(new java.awt.Color(51, 51, 51));
        searchTextFieldDisasterType.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        searchTextFieldDisasterType.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldDisasterTypeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldDisasterTypeFocusLost(evt);
            }
        });

        jLabel11.setText("----");

        Year1Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Year1Label.setForeground(new java.awt.Color(153, 153, 153));
        Year1Label.setText("       Year");
        Year1Label.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Year1LabelFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Year1LabelFocusLost(evt);
            }
        });

        jLabel14.setText("----");

        jLabel15.setText("----");

        Year2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Year2Label.setForeground(new java.awt.Color(153, 153, 153));
        Year2Label.setText("       Year");

        TypeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TypeLabel.setForeground(new java.awt.Color(153, 153, 153));
        TypeLabel.setText("       Type");

        searchTextFieldYearRange1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchTextFieldYearRange1.setForeground(new java.awt.Color(51, 51, 51));
        searchTextFieldYearRange1.setToolTipText("adf");
        searchTextFieldYearRange1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        searchTextFieldYearRange1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldYearRange1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldYearRange1FocusLost(evt);
            }
        });
        searchTextFieldYearRange1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTextFieldYearRange1MouseClicked(evt);
            }
        });
        searchTextFieldYearRange1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldYearRange1ActionPerformed(evt);
            }
        });
        searchTextFieldYearRange1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldYearRange1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchTextFieldYearRange1KeyTyped(evt);
            }
        });

        Selector.setForeground(new java.awt.Color(0, 51, 153));
        Selector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "Region", "Type", "Year-Year", "Year-Year-Region", "Year-Year-Type", "Year-Region", "Year-Type", "Region-Type", "Year-Region-Type", "Year-Year-Region-Type", " " }));
        Selector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectorActionPerformed(evt);
            }
        });

        searchTextFieldYearRange2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchTextFieldYearRange2.setForeground(new java.awt.Color(51, 51, 51));
        searchTextFieldYearRange2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        searchTextFieldYearRange2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldYearRange2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldYearRange2FocusLost(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        RegionLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        RegionLabel.setForeground(new java.awt.Color(153, 153, 153));
        RegionLabel.setText("     Region");

        returnHomeFromUser.setText("Home");
        returnHomeFromUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnHomeFromUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchTextFieldYearRange1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)
                                .addGap(2, 2, 2)
                                .addComponent(searchTextFieldYearRange2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Year1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Year2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchTextFieldRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchTextFieldDisasterType, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(RegionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Selector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(332, 332, 332))))
            .addGroup(layout.createSequentialGroup()
                .addGap(590, 590, 590)
                .addComponent(returnHomeFromUser)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Selector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchTextFieldYearRange2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchTextFieldRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchTextFieldDisasterType, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(jLabel14)
                        .addComponent(jLabel15)
                        .addComponent(searchTextFieldYearRange1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Year1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Year2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RegionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchButton)
                        .addComponent(clearButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                .addComponent(returnHomeFromUser)
                .addGap(52, 52, 52))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
     public ArrayList<Show> showList()
            
    {
     ArrayList <Show> showList=new ArrayList<>();
    
     try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=DisasterManagement;selectMethod=cursor", "TestingUser", "jishan");
            
            String query1="select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n" +
"from Disaster\n" +
"\n" +
"\n" +
"inner join Casuality\n" +
"on Disaster.DisasterId=casuality.DisasterId\n" +
"\n" +
"\n" +
"inner join ReliefAid\n" +
"on casuality.CasualityId=ReliefAid.CasualityId\n" +
"\n" +
"\n" +
"inner join Details\n" +
"on ReliefAid.ReliefAidId=Details.ReliefAidId";
            
            Statement st=connection.createStatement();
            ResultSet rs=st.executeQuery(query1);
            
            Show show;
            while(rs.next())
            {
              
                 show= new Show(rs.getInt("Id"),rs.getString("DisasterName"),rs.getString("DisasterType"),rs.getString("RegionName"),rs.getInt("Injured"),rs.getInt("Missing"),rs.getInt("Death"),rs.getFloat("TotalAmount"),rs.getInt("ContributingCountries"),rs.getInt("Yearr"),rs.getFloat("EconomicDamage"));
                
                showList.add(show);
            }
            
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
     
     return showList;
            
     }
    
    
    
   public void showUser()
   {
       ArrayList<Show> list= showList();
       DefaultTableModel model=(DefaultTableModel)Show_User_Table.getModel();
       Object [] row=new Object[11];
       
       for (int i = 0; i <list.size(); i++) {
           
           row[0]=list.get(i).getId();
           row[1]=list.get(i).getDisasterName();
           row[2]=list.get(i).getDisasterType();
           row[3]=list.get(i).getRegionName();
           row[4]=list.get(i).getInjured();
           row[5]=list.get(i).getMissing();
           row[6]=list.get(i).getDeath();
           row[7]=list.get(i).getTotalAmount();
           row[8]=list.get(i).getContributingCountries();
           row[9]=list.get(i).getYearr();
           row[10]=list.get(i).getEconomicDamage();
           
           model.addRow(row);
           
           
       }   
       
   }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    private void Show_User_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Show_User_TableMouseClicked
     
    }//GEN-LAST:event_Show_User_TableMouseClicked

    private void searchTextFieldRegionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldRegionFocusGained
        // TODO add your handling code here:
        if (RegionLabel.getText().toLowerCase().equals("     region")) {
            RegionLabel.setText("");
            RegionLabel.setForeground(Color.black);

        }
    }//GEN-LAST:event_searchTextFieldRegionFocusGained

    private void searchTextFieldRegionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldRegionFocusLost
        // TODO add your handling code here:

        if (RegionLabel.getText().equals("") || searchTextFieldRegion.getText().toLowerCase().equals("     region")) {
            RegionLabel.setText("     Region");
            RegionLabel.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_searchTextFieldRegionFocusLost

    private void searchTextFieldDisasterTypeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldDisasterTypeFocusGained
        // TODO add your handling code here:

        if (TypeLabel.getText().toLowerCase().equals("       type")) {
            TypeLabel.setText("");
            TypeLabel.setForeground(Color.black);

        }
    }//GEN-LAST:event_searchTextFieldDisasterTypeFocusGained

    private void searchTextFieldDisasterTypeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldDisasterTypeFocusLost
        // TODO add your handling code here:

        if (TypeLabel.getText().equals("") || searchTextFieldDisasterType.getText().toLowerCase().equals("type")) {
            TypeLabel.setText("       Type");
            TypeLabel.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_searchTextFieldDisasterTypeFocusLost

    private void Year1LabelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Year1LabelFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_Year1LabelFocusGained

    private void Year1LabelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Year1LabelFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_Year1LabelFocusLost

    private void searchTextFieldYearRange1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange1FocusGained
        // TODO add your handling code here:

        if (Year1Label.getText().toLowerCase().equals("       year")) {
            Year1Label.setText("");
            Year1Label.setForeground(Color.black);

        }

    }//GEN-LAST:event_searchTextFieldYearRange1FocusGained

    private void searchTextFieldYearRange1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange1FocusLost
        // TODO add your handling code here:

        if (Year1Label.getText().equals("") || Year1Label.getText().toLowerCase().equals("       year")) {
            Year1Label.setText("       Year");
            Year1Label.setForeground(new Color(153, 153, 153));
        }

    }//GEN-LAST:event_searchTextFieldYearRange1FocusLost

    private void searchTextFieldYearRange1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextFieldYearRange1MouseClicked

    private void searchTextFieldYearRange1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_searchTextFieldYearRange1ActionPerformed

    private void searchTextFieldYearRange1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange1KeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_searchTextFieldYearRange1KeyReleased

    private void searchTextFieldYearRange1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextFieldYearRange1KeyTyped

    private void SelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectorActionPerformed
        // TODO add your handling code here:

        String select = Selector.getSelectedItem().toString();
        if (select == "Year") {

            q = 1;

        }

        if (select == "Region") {

            q = 2;

        } else if (select == "Type") {

            q = 3;

        } else if (select == "Year-Year") {

            q = 4;

        } else if (select == "Year-Year-Region") {

            q = 5;

        } else if (select == "Year-Year-Type") {

            q = 6;

        } else if (select == "Year-Region") {

            q = 7;

        } else if (select == "Year-Type") {

            q = 8;

        } else if (select == "Region-Type") {

            q = 9;

        } else if (select == "Year-Region-Type") {

            q = 10;

        } else if (select == "Year-Year-Region-Type") {

            q = 11;

        }

    }//GEN-LAST:event_SelectorActionPerformed

    private void searchTextFieldYearRange2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange2FocusGained
        // TODO add your handling code here:

        if (Year2Label.getText().toLowerCase().equals("       year")) {
            Year2Label.setText("");
            Year2Label.setForeground(Color.black);

        }

    }//GEN-LAST:event_searchTextFieldYearRange2FocusGained

    private void searchTextFieldYearRange2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange2FocusLost
        // TODO add your handling code here:
        if (Year2Label.getText().equals("") || searchTextFieldYearRange1.getText().toLowerCase().equals("       year")) {
            Year2Label.setText("       Year");
            Year2Label.setForeground(new Color(153, 153, 153));
        }

    }//GEN-LAST:event_searchTextFieldYearRange2FocusLost

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:

        ArrayList<Show> list = null;
        list = new ArrayList<Show>();

        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=DisasterManagement;selectMethod=cursor", "TestingUser", "jishan");

            String query1 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
            + "from Disaster\n"
            + "inner join Casuality\n"
            + "on Disaster.DisasterId=casuality.DisasterId\n"
            + "\n"
            + "inner join ReliefAid\n"
            + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
            + "\n"
            + "inner join Details\n"
            + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
            + "where Yearr like ?";

            String query2 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
            + "from Disaster\n"
            + "inner join Casuality\n"
            + "on Disaster.DisasterId=casuality.DisasterId\n"
            + "\n"
            + "inner join ReliefAid\n"
            + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
            + "\n"
            + "inner join Details\n"
            + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
            + "where RegionName like ?";

            String query3 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
            + "from Disaster\n"
            + "inner join Casuality\n"
            + "on Disaster.DisasterId=casuality.DisasterId\n"
            + "\n"
            + "inner join ReliefAid\n"
            + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
            + "\n"
            + "inner join Details\n"
            + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
            + "where DisasterType = ?";

            String query4 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
            + "from Disaster\n"
            + "inner join Casuality\n"
            + "on Disaster.DisasterId=casuality.DisasterId\n"
            + "\n"
            + "inner join ReliefAid\n"
            + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
            + "\n"
            + "inner join Details\n"
            + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
            + "where Yearr between ? and ? ";

            String query5 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
            + "from Disaster\n"
            + "inner join Casuality\n"
            + "on Disaster.DisasterId=casuality.DisasterId\n"
            + "\n"
            + "inner join ReliefAid\n"
            + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
            + "\n"
            + "inner join Details\n"
            + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
            + "where Yearr between ? and ? and RegionName like ? ";

            String query6 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
            + "from Disaster\n"
            + "inner join Casuality\n"
            + "on Disaster.DisasterId=casuality.DisasterId\n"
            + "\n"
            + "inner join ReliefAid\n"
            + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
            + "\n"
            + "inner join Details\n"
            + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
            + "where Yearr between ? and ? and DisasterType = ?";

            String query7 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
            + "from Disaster\n"
            + "inner join Casuality\n"
            + "on Disaster.DisasterId=casuality.DisasterId\n"
            + "\n"
            + "inner join ReliefAid\n"
            + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
            + "\n"
            + "inner join Details\n"
            + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
            + "where Yearr = ? and RegionName = ?";

            String query8 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
            + "from Disaster\n"
            + "inner join Casuality\n"
            + "on Disaster.DisasterId=casuality.DisasterId\n"
            + "\n"
            + "inner join ReliefAid\n"
            + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
            + "\n"
            + "inner join Details\n"
            + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
            + "where Yearr = ? and DisasterType = ?";

            String query9 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
            + "from Disaster\n"
            + "inner join Casuality\n"
            + "on Disaster.DisasterId=casuality.DisasterId\n"
            + "\n"
            + "inner join ReliefAid\n"
            + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
            + "\n"
            + "inner join Details\n"
            + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
            + "where RegionName = ? and DisasterType = ?";

            String query10 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
            + "from Disaster\n"
            + "inner join Casuality\n"
            + "on Disaster.DisasterId=casuality.DisasterId\n"
            + "\n"
            + "inner join ReliefAid\n"
            + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
            + "\n"
            + "inner join Details\n"
            + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
            + "where Yearr = ? and RegionName = ? and DisasterType=?";

            String query11 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
            + "from Disaster\n"
            + "inner join Casuality\n"
            + "on Disaster.DisasterId=casuality.DisasterId\n"
            + "\n"
            + "inner join ReliefAid\n"
            + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
            + "\n"
            + "inner join Details\n"
            + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
            + "where Yearr between ? and ? and RegionName=? and DisasterType = ?";

            PreparedStatement pst1 = connection.prepareStatement(query1);

            pst1.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));

            PreparedStatement pst2 = connection.prepareStatement(query2);

            pst2.setString(1, String.valueOf(searchTextFieldRegion.getText().toString()));

            PreparedStatement pst3 = connection.prepareStatement(query3);

            pst3.setString(1, String.valueOf(searchTextFieldDisasterType.getText().toString()));

            PreparedStatement pst4 = connection.prepareStatement(query4);

            pst4.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));
            pst4.setString(2, String.valueOf(searchTextFieldYearRange2.getText().toString()));

            PreparedStatement pst5 = connection.prepareStatement(query5);

            pst5.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));
            pst5.setString(2, String.valueOf(searchTextFieldYearRange2.getText().toString()));
            pst5.setString(3, String.valueOf(searchTextFieldRegion.getText().toString()));

            PreparedStatement pst6 = connection.prepareStatement(query6);
            pst6.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));
            pst6.setString(2, String.valueOf(searchTextFieldYearRange2.getText().toString()));
            pst6.setString(3, String.valueOf(searchTextFieldDisasterType.getText().toString()));

            PreparedStatement pst7 = connection.prepareStatement(query7);
            pst7.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));
            pst7.setString(2, String.valueOf(searchTextFieldRegion.getText().toString()));

            PreparedStatement pst8 = connection.prepareStatement(query8);
            pst8.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));
            pst8.setString(2, String.valueOf(searchTextFieldDisasterType.getText().toString()));

            PreparedStatement pst9 = connection.prepareStatement(query9);
            pst9.setString(1, String.valueOf(searchTextFieldRegion.getText().toString()));
            pst9.setString(2, String.valueOf(searchTextFieldDisasterType.getText().toString()));

            PreparedStatement pst10 = connection.prepareStatement(query10);
            pst10.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));
            pst10.setString(2, String.valueOf(searchTextFieldRegion.getText().toString()));
            pst10.setString(3, String.valueOf(searchTextFieldDisasterType.getText().toString()));

            PreparedStatement pst11 = connection.prepareStatement(query11);
            pst11.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));
            pst11.setString(2, String.valueOf(searchTextFieldYearRange2.getText().toString()));
            pst11.setString(3, String.valueOf(searchTextFieldRegion.getText().toString()));
            pst11.setString(4, String.valueOf(searchTextFieldDisasterType.getText().toString()));

            ResultSet rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11;

            rs1 = pst1.executeQuery();
            rs2 = pst2.executeQuery();
            rs3 = pst3.executeQuery();
            rs4 = pst4.executeQuery();
            rs5 = pst5.executeQuery();
            rs6 = pst6.executeQuery();
            rs7 = pst7.executeQuery();
            rs8 = pst8.executeQuery();
            rs9 = pst9.executeQuery();
            rs10 = pst10.executeQuery();
            rs11 = pst11.executeQuery();

            Show show1, show2, show3, show4, show5, show6, show7, show8, show9, show10, show11;

            if (q == 1) {
                while (rs1.next()) {

                    show1 = new Show(rs1.getInt("Id"), rs1.getString("DisasterName"), rs1.getString("DisasterType"), rs1.getString("RegionName"), rs1.getInt("Injured"), rs1.getInt("Missing"), rs1.getInt("Death"), rs1.getFloat("TotalAmount"), rs1.getInt("ContributingCountries"), rs1.getInt("Yearr"), rs1.getFloat("EconomicDamage"));
                    list.add(show1);

                }
            }

            if (q == 2) {
                while (rs2.next()) {

                    show2 = new Show(rs2.getInt("Id"), rs2.getString("DisasterName"), rs2.getString("DisasterType"), rs2.getString("RegionName"), rs2.getInt("Injured"), rs2.getInt("Missing"), rs2.getInt("Death"), rs2.getFloat("TotalAmount"), rs2.getInt("ContributingCountries"), rs2.getInt("Yearr"), rs2.getFloat("EconomicDamage"));
                    list.add(show2);
                }
            }

            if (q == 3) {
                while (rs3.next()) {

                    show3 = new Show(rs3.getInt("Id"), rs3.getString("DisasterName"), rs3.getString("DisasterType"), rs3.getString("RegionName"), rs3.getInt("Injured"), rs3.getInt("Missing"), rs3.getInt("Death"), rs3.getFloat("TotalAmount"), rs3.getInt("ContributingCountries"), rs3.getInt("Yearr"), rs3.getFloat("EconomicDamage"));
                    list.add(show3);
                }

            }

            if (q == 4) {
                while (rs4.next()) {

                    show4 = new Show(rs4.getInt("Id"), rs4.getString("DisasterName"), rs4.getString("DisasterType"), rs4.getString("RegionName"), rs4.getInt("Injured"), rs4.getInt("Missing"), rs4.getInt("Death"), rs4.getFloat("TotalAmount"), rs4.getInt("ContributingCountries"), rs4.getInt("Yearr"), rs4.getFloat("EconomicDamage"));
                    list.add(show4);
                }

            }

            if (q == 5) {
                while (rs5.next()) {

                    show5 = new Show(rs5.getInt("Id"), rs5.getString("DisasterName"), rs5.getString("DisasterType"), rs5.getString("RegionName"), rs5.getInt("Injured"), rs5.getInt("Missing"), rs5.getInt("Death"), rs5.getFloat("TotalAmount"), rs5.getInt("ContributingCountries"), rs5.getInt("Yearr"), rs5.getFloat("EconomicDamage"));
                    list.add(show5);
                }

            }

            if (q == 6) {
                while (rs6.next()) {

                    show6 = new Show(rs6.getInt("Id"), rs6.getString("DisasterName"), rs6.getString("DisasterType"), rs6.getString("RegionName"), rs6.getInt("Injured"), rs6.getInt("Missing"), rs6.getInt("Death"), rs6.getFloat("TotalAmount"), rs6.getInt("ContributingCountries"), rs6.getInt("Yearr"), rs6.getFloat("EconomicDamage"));
                    list.add(show6);
                }

            }

            if (q == 7) {
                while (rs7.next()) {

                    show7 = new Show(rs7.getInt("Id"), rs7.getString("DisasterName"), rs7.getString("DisasterType"), rs7.getString("RegionName"), rs7.getInt("Injured"), rs7.getInt("Missing"), rs7.getInt("Death"), rs7.getFloat("TotalAmount"), rs7.getInt("ContributingCountries"), rs7.getInt("Yearr"), rs7.getFloat("EconomicDamage"));
                    list.add(show7);
                }

            }

            if (q == 8) {
                while (rs8.next()) {

                    show8 = new Show(rs8.getInt("Id"), rs8.getString("DisasterName"), rs8.getString("DisasterType"), rs8.getString("RegionName"), rs8.getInt("Injured"), rs8.getInt("Missing"), rs8.getInt("Death"), rs8.getFloat("TotalAmount"), rs8.getInt("ContributingCountries"), rs8.getInt("Yearr"), rs8.getFloat("EconomicDamage"));
                    list.add(show8);
                }

            }

            if (q == 9) {
                while (rs9.next()) {

                    show9 = new Show(rs9.getInt("Id"), rs9.getString("DisasterName"), rs9.getString("DisasterType"), rs9.getString("RegionName"), rs9.getInt("Injured"), rs9.getInt("Missing"), rs9.getInt("Death"), rs9.getFloat("TotalAmount"), rs9.getInt("ContributingCountries"), rs9.getInt("Yearr"), rs9.getFloat("EconomicDamage"));
                    list.add(show9);
                }

            }

            if (q == 10) {
                while (rs10.next()) {

                    show10 = new Show(rs10.getInt("Id"), rs10.getString("DisasterName"), rs10.getString("DisasterType"), rs10.getString("RegionName"), rs10.getInt("Injured"), rs10.getInt("Missing"), rs10.getInt("Death"), rs10.getFloat("TotalAmount"), rs10.getInt("ContributingCountries"), rs10.getInt("Yearr"), rs10.getFloat("EconomicDamage"));
                    list.add(show10);
                }

            }

            if (q == 11) {
                while (rs11.next()) {

                    show11 = new Show(rs11.getInt("Id"), rs11.getString("DisasterName"), rs11.getString("DisasterType"), rs11.getString("RegionName"), rs11.getInt("Injured"), rs11.getInt("Missing"), rs11.getInt("Death"), rs11.getFloat("TotalAmount"), rs11.getInt("ContributingCountries"), rs11.getInt("Yearr"), rs11.getFloat("EconomicDamage"));
                    list.add(show11);
                }

            }

            DefaultTableModel model = (DefaultTableModel) Show_User_Table.getModel();
            model.setRowCount(0);
            Object[] row = new Object[11];

            for (int i = 0; i < list.size(); i++) {

                row[0] = list.get(i).getId();
                row[1] = list.get(i).getDisasterName();
                row[2] = list.get(i).getDisasterType();
                row[3] = list.get(i).getRegionName();
                row[4] = list.get(i).getInjured();
                row[5] = list.get(i).getMissing();
                row[6] = list.get(i).getDeath();
                row[7] = list.get(i).getTotalAmount();
                row[8] = list.get(i).getContributingCountries();
                row[9] = list.get(i).getYearr();
                row[10] = list.get(i).getEconomicDamage();

                model.addRow(row);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_searchButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:

        // TODO add your handling code here:

        searchTextFieldYearRange1.setText("");

        searchTextFieldYearRange2.setText("");

        searchTextFieldRegion.setText("");

        searchTextFieldDisasterType.setText("");

        Selector.setSelectedIndex(0);

        ArrayList<Show> list = null;
        list = new ArrayList<Show>();

        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=DisasterManagement;selectMethod=cursor", "TestingUser", "jishan");

            String query = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
            + "from Disaster\n"
            + "inner join Casuality\n"
            + "on Disaster.DisasterId=casuality.DisasterId\n"
            + "\n"
            + "inner join ReliefAid\n"
            + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
            + "\n"
            + "inner join Details\n"
            + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n";

            PreparedStatement pst = connection.prepareStatement(query);

            ResultSet rs;
            rs = pst.executeQuery();

            Show show;

            while (rs.next()) {
                show = new Show(rs.getInt("Id"), rs.getString("DisasterName"), rs.getString("DisasterType"), rs.getString("RegionName"), rs.getInt("Injured"), rs.getInt("Missing"), rs.getInt("Death"), rs.getFloat("TotalAmount"), rs.getInt("ContributingCountries"), rs.getInt("Yearr"), rs.getFloat("EconomicDamage"));
                list.add(show);

            }

            DefaultTableModel model = (DefaultTableModel) Show_User_Table.getModel();
            model.setRowCount(0);
            Object[] row = new Object[11];

            for (int i = 0; i < list.size(); i++) {

                row[0] = list.get(i).getId();
                row[1] = list.get(i).getDisasterName();
                row[2] = list.get(i).getDisasterType();
                row[3] = list.get(i).getRegionName();
                row[4] = list.get(i).getInjured();
                row[5] = list.get(i).getMissing();
                row[6] = list.get(i).getDeath();

                row[7] = list.get(i).getTotalAmount();
                row[8] = list.get(i).getContributingCountries();
                row[9] = list.get(i).getYearr();
                row[10] = list.get(i).getEconomicDamage();

                model.addRow(row);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_clearButtonActionPerformed

    private void returnHomeFromUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnHomeFromUserActionPerformed
        // TODO add your handling code here:
        FrontPage fp=new FrontPage();
        fp.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_returnHomeFromUserActionPerformed
 int q=0;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowTableForUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowTableForUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowTableForUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowTableForUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowTableForUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel RegionLabel;
    private javax.swing.JComboBox<String> Selector;
    private javax.swing.JTable Show_User_Table;
    private javax.swing.JLabel TypeLabel;
    private javax.swing.JLabel Year1Label;
    private javax.swing.JLabel Year2Label;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton returnHomeFromUser;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextFieldDisasterType;
    private javax.swing.JTextField searchTextFieldRegion;
    private javax.swing.JTextField searchTextFieldYearRange1;
    private javax.swing.JTextField searchTextFieldYearRange2;
    // End of variables declaration//GEN-END:variables
}
