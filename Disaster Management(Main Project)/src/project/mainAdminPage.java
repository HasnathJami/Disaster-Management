/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Hasnath Jami
 */
public class mainAdminPage extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public mainAdminPage() {

        initComponents();
       

        showUser();

    }

    public ArrayList<Show> showList() {
        ArrayList<Show> showList = new ArrayList<>();

        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=DisasterManagement;selectMethod=cursor", "TestingUser", "jishan");

            String query1 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
                    + "from Disaster\n"
                    + "\n"
                    + "\n"
                    + "inner join Casuality\n"
                    + "on Disaster.DisasterId=casuality.DisasterId\n"
                    + "\n"
                    + "\n"
                    + "inner join ReliefAid\n"
                    + "on casuality.CasualityId=ReliefAid.CasualityId\n"
                    + "\n"
                    + "\n"
                    + "inner join Details\n"
                    + "on ReliefAid.ReliefAidId=Details.ReliefAidId";

            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery(query1);

            Show show;
            while (rs.next()) {

                show = new Show(rs.getInt("Id"), rs.getString("DisasterName"), rs.getString("DisasterType"), rs.getString("RegionName"), rs.getInt("Injured"), rs.getInt("Missing"), rs.getInt("Death"), rs.getFloat("TotalAmount"), rs.getInt("ContributingCountries"), rs.getInt("Yearr"), rs.getFloat("EconomicDamage"));

                showList.add(show);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return showList;

    }

    public void showUser() {
        ArrayList<Show> list = showList();
        DefaultTableModel model = (DefaultTableModel) Show_User_Table.getModel();
        Object[] row = new Object[11];

        for (int i = 0; i < list.size(); i++) {

            row[0] = list.get(i).getId();
            row[1] = list.get(i).getDisasterName();
            row[2] = list.get(i).getDisasterType();
            row[3] = list.get(i).getRegionName();
            row[4] = list.get(i).getInjured();
            row[5] = list.get(i).getMissing();
            row[6] = list.get(i).getDeath();
            row[7] = list.get(i).getTotalAmount();
            row[8] = list.get(i).getContributingCountries();
            row[9] = list.get(i).getYearr();
            row[10] = list.get(i).getEconomicDamage();

            model.addRow(row);

        }

    }

    public void reset() {
        ID.setText(" ");
        DisasterName.setText(" ");
        Natural.setSelected(false);
        Manmade.setSelected(false);
        RegionName.setText("");
        Injured.setText("");
        Missing.setText("");
        Death.setText("");
        Year.setSelectedIndex(0);
        EconomicDamage.setText("");
        TotalAmount.setText("");
        ContributingCountries.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Year1Label = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Disaster = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        DisasterName = new javax.swing.JTextField();
        Natural = new javax.swing.JCheckBox();
        RegionName = new javax.swing.JTextField();
        Injured = new javax.swing.JTextField();
        Missing = new javax.swing.JTextField();
        Death = new javax.swing.JTextField();
        Year = new javax.swing.JComboBox<>();
        EconomicDamage = new javax.swing.JTextField();
        TotalAmount = new javax.swing.JTextField();
        ContributingCountries = new javax.swing.JTextField();
        Manmade = new javax.swing.JCheckBox();
        insertButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        showButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Show_User_Table = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        ID = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        searchTextFieldYearRange1 = new javax.swing.JTextField();
        Selector = new javax.swing.JComboBox<>();
        ReliefAidId = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        CasualityId = new javax.swing.JTextField();
        searchTextFieldYearRange2 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        searchTextFieldRegion = new javax.swing.JTextField();
        searchTextFieldDisasterType = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        backFromMainAdminPageButton = new javax.swing.JButton();
        FrontPageButton = new javax.swing.JButton();
        Year2Label = new javax.swing.JLabel();
        TypeLabel = new javax.swing.JLabel();
        RegionLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 0, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.pink);
        setName("MainFrame"); // NOI18N

        Year1Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Year1Label.setForeground(new java.awt.Color(153, 153, 153));
        Year1Label.setText("       Year");
        Year1Label.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Year1LabelFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Year1LabelFocusLost(evt);
            }
        });

        jLabel1.setText("Disaster Name");

        Disaster.setText("Disaster Type");

        jLabel3.setText("Region Name");

        jLabel4.setText("Injured");

        jLabel5.setText("Missing");

        jLabel6.setText("Death");

        jLabel7.setText("Year");

        jLabel8.setText("Economic Damage");

        jLabel9.setText("Total Relief Amount");

        jLabel10.setText("Contributing Countries");

        Natural.setText("Natural");
        Natural.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NaturalActionPerformed(evt);
            }
        });

        Injured.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InjuredActionPerformed(evt);
            }
        });

        Death.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeathActionPerformed(evt);
            }
        });

        Year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1990", "1995", "2000", "2005", "2010", "2012", "2015", "2016", "2019" }));
        Year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearActionPerformed(evt);
            }
        });

        EconomicDamage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EconomicDamageActionPerformed(evt);
            }
        });

        TotalAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalAmountActionPerformed(evt);
            }
        });

        Manmade.setText("Man Made");
        Manmade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManmadeActionPerformed(evt);
            }
        });

        insertButton.setBackground(new java.awt.Color(51, 204, 255));
        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        showButton.setText("Show User Info");
        showButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showButtonActionPerformed(evt);
            }
        });

        Show_User_Table.setBackground(new java.awt.Color(255, 153, 204));
        Show_User_Table.setForeground(new java.awt.Color(102, 0, 153));
        Show_User_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Disaster Id", "Disaster Name", "Disaster Type", "Region Name", "Injured", "Missing", "Death", "TotalRelief", "ContributingCountries", "Year", "Economic Damage"
            }
        ));
        Show_User_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Show_User_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Show_User_Table);

        deleteButton.setBackground(new java.awt.Color(255, 51, 51));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Disaster Id");

        ID.setToolTipText("");
        ID.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        ID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                IDKeyTyped(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        searchTextFieldYearRange1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchTextFieldYearRange1.setForeground(new java.awt.Color(51, 51, 51));
        searchTextFieldYearRange1.setToolTipText("adf");
        searchTextFieldYearRange1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        searchTextFieldYearRange1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldYearRange1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldYearRange1FocusLost(evt);
            }
        });
        searchTextFieldYearRange1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTextFieldYearRange1MouseClicked(evt);
            }
        });
        searchTextFieldYearRange1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldYearRange1ActionPerformed(evt);
            }
        });
        searchTextFieldYearRange1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldYearRange1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchTextFieldYearRange1KeyTyped(evt);
            }
        });

        Selector.setForeground(new java.awt.Color(0, 51, 153));
        Selector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "Region", "Type", "Year-Year", "Year-Year-Region", "Year-Year-Type", "Year-Region", "Year-Type", "Region-Type", "Year-Region-Type", "Year-Year-Region-Type", " " }));
        Selector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectorActionPerformed(evt);
            }
        });

        ReliefAidId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReliefAidIdActionPerformed(evt);
            }
        });

        jLabel12.setText("ReliefAidId");

        jLabel13.setText("CasualityId");

        searchTextFieldYearRange2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchTextFieldYearRange2.setForeground(new java.awt.Color(51, 51, 51));
        searchTextFieldYearRange2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        searchTextFieldYearRange2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldYearRange2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldYearRange2FocusLost(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        searchTextFieldRegion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchTextFieldRegion.setForeground(new java.awt.Color(51, 51, 51));
        searchTextFieldRegion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        searchTextFieldRegion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldRegionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldRegionFocusLost(evt);
            }
        });

        searchTextFieldDisasterType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchTextFieldDisasterType.setForeground(new java.awt.Color(51, 51, 51));
        searchTextFieldDisasterType.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        searchTextFieldDisasterType.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldDisasterTypeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldDisasterTypeFocusLost(evt);
            }
        });

        jLabel11.setText("----");

        jLabel14.setText("----");

        jLabel15.setText("----");

        backFromMainAdminPageButton.setText("Back");
        backFromMainAdminPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFromMainAdminPageButtonActionPerformed(evt);
            }
        });

        FrontPageButton.setText("Home");
        FrontPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FrontPageButtonActionPerformed(evt);
            }
        });

        Year2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Year2Label.setForeground(new java.awt.Color(153, 153, 153));
        Year2Label.setText("       Year");

        TypeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TypeLabel.setForeground(new java.awt.Color(153, 153, 153));
        TypeLabel.setText("       Type");

        RegionLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        RegionLabel.setForeground(new java.awt.Color(153, 153, 153));
        RegionLabel.setText("     Region");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backFromMainAdminPageButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FrontPageButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(96, 96, 96))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel13)))
                                    .addComponent(Disaster))
                                .addGap(42, 42, 42)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EconomicDamage, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ContributingCountries, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ReliefAidId, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(TotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(RegionName, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(DisasterName, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                                .addComponent(CasualityId, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Injured, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Missing, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Death, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Natural)
                                                .addGap(18, 18, 18)
                                                .addComponent(Manmade)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(showButton)
                                                .addGap(18, 18, 18)
                                                .addComponent(updateButton)
                                                .addGap(14, 14, 14)))
                                        .addComponent(deleteButton)
                                        .addGap(12, 12, 12)))
                                .addGap(114, 114, 114)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 825, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(80, 80, 80)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(searchTextFieldYearRange1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel11)
                                                .addGap(2, 2, 2)
                                                .addComponent(searchTextFieldYearRange2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Year1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Year2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(searchTextFieldRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(searchTextFieldDisasterType, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(RegionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(TypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(36, 36, 36)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(searchButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(Selector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(insertButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel2)
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(DisasterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Disaster)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Natural)
                                .addComponent(Manmade)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(RegionName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(CasualityId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Injured, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(Missing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(Death, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ReliefAidId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(TotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ContributingCountries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 9, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Selector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(searchTextFieldYearRange2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(searchTextFieldRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(searchTextFieldDisasterType, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11)
                                .addComponent(jLabel14)
                                .addComponent(jLabel15)
                                .addComponent(searchTextFieldYearRange1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(EconomicDamage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Year1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Year2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(RegionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resetButton)
                            .addComponent(showButton)
                            .addComponent(updateButton)
                            .addComponent(deleteButton)
                            .addComponent(insertButton))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backFromMainAdminPageButton)
                            .addComponent(FrontPageButton))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchButton)
                            .addComponent(clearButton))
                        .addGap(200, 250, Short.MAX_VALUE))))
        );

        searchTextFieldRegion.getAccessibleContext().setAccessibleName("");
        searchTextFieldDisasterType.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DeathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeathActionPerformed

    private void YearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_YearActionPerformed

    private void ManmadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManmadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ManmadeActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        // TODO add your handling code here:
        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=DisasterManagement;selectMethod=cursor", "TestingUser", "jishan");

            String query1 = "insert into Disaster(Id,DisasterName,DisasterType,RegionName) values(?,?,?,?) ";
            String query2 = "insert into Casuality (CasualityId,Injured,Missing,Death) values (?,?,?,?)";
            String query3 = "insert into ReliefAid (ReliefAidId,TotalAmount,ContributingCountries) values(?,?,?)";
            String query4 = "insert into Details(Yearr,EconomicDamage) values(?,?)";

            PreparedStatement pst1 = connection.prepareStatement(query1);
            PreparedStatement pst2 = connection.prepareStatement(query2);
            PreparedStatement pst3 = connection.prepareStatement(query3);
            PreparedStatement pst4 = connection.prepareStatement(query4);

            pst1.setString(1, ID.getText());
            pst1.setString(2, DisasterName.getText());

            String DisasterType = "";
            if (Natural.isSelected()) {
                DisasterType += Natural.getText() + " ";

            }

            if (Manmade.isSelected()) {
                DisasterType += Manmade.getText() + " ";

            }
            pst1.setString(3, DisasterType);
            pst1.setString(4, RegionName.getText());

            pst2.setString(1, CasualityId.getText());
            pst2.setString(2, Injured.getText());
            pst2.setString(3, Missing.getText());
            pst2.setString(4, Death.getText());

            pst3.setString(1, ReliefAidId.getText());
            pst3.setString(2, TotalAmount.getText());
            pst3.setString(3, ContributingCountries.getText());

            String year = Year.getSelectedItem().toString();
            pst4.setString(1, year);

            pst4.setString(2, EconomicDamage.getText());

            pst1.executeUpdate();
            pst2.executeUpdate();
            pst3.executeUpdate();
            pst4.executeUpdate();

            DefaultTableModel model = (DefaultTableModel) Show_User_Table.getModel();
            model.setRowCount(0);
            showUser();

            JOptionPane.showMessageDialog(null, "Success");

        } catch (Exception e) {
            //e.printStackTrace();
            System.out.println("Excetion" + e);
            JOptionPane.showMessageDialog(null, "The Disaster Id Already exists");
        }


    }//GEN-LAST:event_insertButtonActionPerformed

    private void EconomicDamageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EconomicDamageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EconomicDamageActionPerformed

    private void TotalAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TotalAmountActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        ID.setText("");
        DisasterName.setText(" ");
        Natural.setSelected(false);
        Manmade.setSelected(false);
        RegionName.setText("");
        Injured.setText("");
        Missing.setText("");
        Death.setText("");
        Year.setSelectedIndex(0);
        EconomicDamage.setText("");
        TotalAmount.setText("");
        ContributingCountries.setText("");


    }//GEN-LAST:event_resetButtonActionPerformed

    private void showButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showButtonActionPerformed
        // TODO add your handling code here:
        showUserRegisterInformation info = new showUserRegisterInformation();
        info.setVisible(true);
        setVisible(false);


    }//GEN-LAST:event_showButtonActionPerformed


    private void Show_User_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Show_User_TableMouseClicked
        // TODO add your handling code here:
        int i = Show_User_Table.getSelectedRow();
        TableModel model = Show_User_Table.getModel();

        ID.setText(model.getValueAt(i, 0).toString());
        DisasterName.setText(model.getValueAt(i, 1).toString());

        String DisasterType = model.getValueAt(i, 2).toString();

        if (DisasterType.startsWith("N")) {
            Natural.setSelected(true);
            Manmade.setSelected(false);

        } else {
            Natural.setSelected(false);
            Manmade.setSelected(true);

        }

        RegionName.setText(model.getValueAt(i, 3).toString());
        Injured.setText(model.getValueAt(i, 4).toString());
        Missing.setText(model.getValueAt(i, 5).toString());
        Death.setText(model.getValueAt(i, 6).toString());
        TotalAmount.setText(model.getValueAt(i, 7).toString());
        ContributingCountries.setText(model.getValueAt(i, 8).toString());

        int year = (int) model.getValueAt(i, 9);
        if (year == 1990) {
            Year.setSelectedIndex(0);

        }

        if (year == 1995) {
            Year.setSelectedIndex(1);

        }
        if (year == 2000) {
            Year.setSelectedIndex(2);

        }

        if (year == 2005) {
            Year.setSelectedIndex(3);

        }

        if (year == 2010) {
            Year.setSelectedIndex(4);

        }

        if (year == 2012) {
            Year.setSelectedIndex(5);

        }

        if (year == 2015) {
            Year.setSelectedIndex(6);

        }

        if (year == 2016) {
            Year.setSelectedIndex(7);

        }

        if (year == 2019) {
            Year.setSelectedIndex(8);

        }

        EconomicDamage.setText(model.getValueAt(i, 10).toString());


    }//GEN-LAST:event_Show_User_TableMouseClicked

    private void NaturalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NaturalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NaturalActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=DisasterManagement;selectMethod=cursor", "TestingUser", "jishan");

            String query1 = "DELETE FROM Disaster where Id=?";
            PreparedStatement pst1 = connection.prepareStatement(query1);
            pst1.setString(1, ID.getText());
            // pst1.setString(1, DisasterName.getText());

            pst1.executeUpdate();

            DefaultTableModel model = (DefaultTableModel) Show_User_Table.getModel();
            model.setRowCount(0);

            showUser();
            JOptionPane.showMessageDialog(null, "Delete Success");

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:

        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=DisasterManagement;selectMethod=cursor", "TestingUser", "jishan");

            int row = Show_User_Table.getSelectedRow();
            String value = (Show_User_Table.getModel().getValueAt(row, 0).toString());

            String query1 = "Update Disaster Set DisasterName=?,DisasterType=?,RegionName=? where id=" + value;
            String query2 = "Update Casuality Set Injured=?,Missing=?,Death=? where CasualityId=" + value;
            String query3 = "Update ReliefAid Set TotalAmount=?,ContributingCountries=? where ReliefAidId=" + value;
            String query4 = "Update Details Set Yearr=?,EconomicDamage=? where ReliefAidId=" + value;

            PreparedStatement pst1 = connection.prepareStatement(query1);
            PreparedStatement pst2 = connection.prepareStatement(query2);
            PreparedStatement pst3 = connection.prepareStatement(query3);
            PreparedStatement pst4 = connection.prepareStatement(query4);

            pst1.setString(1, DisasterName.getText());

            String DisasterType = "";
            if (Natural.isSelected()) {
                DisasterType += Natural.getText() + " ";

            }

            if (Manmade.isSelected()) {
                DisasterType += Manmade.getText() + " ";

            }
            pst1.setString(2, DisasterType);

            pst1.setString(3, RegionName.getText());
            //  pst1.setString(4, Id.getText());

            // pst2.setString(2, DisasterId.getText());
            pst2.setString(1, Injured.getText());
            pst2.setString(2, Missing.getText());
            pst2.setString(3, Death.getText());
            // pst2.setString(4, CasualityId.getText());

            pst3.setString(1, TotalAmount.getText());
            pst3.setString(2, ContributingCountries.getText());
            //   pst3.setString(3, Id.getText());

            String year = Year.getSelectedItem().toString();

            pst4.setString(1, year);
            pst4.setString(2, EconomicDamage.getText());
            // pst4.setString(3, Id.getText());

            pst1.executeUpdate();
            pst2.executeUpdate();
            pst3.executeUpdate();
            pst4.executeUpdate();

            DefaultTableModel model = (DefaultTableModel) Show_User_Table.getModel();
            model.setRowCount(0);
            showUser();

            JOptionPane.showMessageDialog(null, "Success");

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_updateButtonActionPerformed


    private void searchTextFieldYearRange1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange1KeyReleased
        // TODO add your handling code here:


    }//GEN-LAST:event_searchTextFieldYearRange1KeyReleased

    private void ReliefAidIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReliefAidIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ReliefAidIdActionPerformed

    private void InjuredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InjuredActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InjuredActionPerformed

    private void searchTextFieldYearRange1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange1ActionPerformed
        // TODO add your handling code here:
        
        

    }//GEN-LAST:event_searchTextFieldYearRange1ActionPerformed

    private void searchTextFieldYearRange1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextFieldYearRange1KeyTyped

    int q = 0;
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:

        ArrayList<Show> list = null;
        list = new ArrayList<Show>();
        
         

        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=DisasterManagement;selectMethod=cursor", "TestingUser", "jishan");

            String query1 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
                    + "from Disaster\n"
                    + "inner join Casuality\n"
                    + "on Disaster.DisasterId=casuality.DisasterId\n"
                    + "\n"
                    + "inner join ReliefAid\n"
                    + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
                    + "\n"
                    + "inner join Details\n"
                    + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
                    + "where Yearr like ?";

            String query2 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
                    + "from Disaster\n"
                    + "inner join Casuality\n"
                    + "on Disaster.DisasterId=casuality.DisasterId\n"
                    + "\n"
                    + "inner join ReliefAid\n"
                    + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
                    + "\n"
                    + "inner join Details\n"
                    + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
                    + "where RegionName like ?";

            String query3 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
                    + "from Disaster\n"
                    + "inner join Casuality\n"
                    + "on Disaster.DisasterId=casuality.DisasterId\n"
                    + "\n"
                    + "inner join ReliefAid\n"
                    + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
                    + "\n"
                    + "inner join Details\n"
                    + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
                    + "where DisasterType = ?";

            String query4 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
                    + "from Disaster\n"
                    + "inner join Casuality\n"
                    + "on Disaster.DisasterId=casuality.DisasterId\n"
                    + "\n"
                    + "inner join ReliefAid\n"
                    + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
                    + "\n"
                    + "inner join Details\n"
                    + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
                    + "where Yearr between ? and ? ";

            String query5 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
                    + "from Disaster\n"
                    + "inner join Casuality\n"
                    + "on Disaster.DisasterId=casuality.DisasterId\n"
                    + "\n"
                    + "inner join ReliefAid\n"
                    + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
                    + "\n"
                    + "inner join Details\n"
                    + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
                    + "where Yearr between ? and ? and RegionName like ? ";

            String query6 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
                    + "from Disaster\n"
                    + "inner join Casuality\n"
                    + "on Disaster.DisasterId=casuality.DisasterId\n"
                    + "\n"
                    + "inner join ReliefAid\n"
                    + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
                    + "\n"
                    + "inner join Details\n"
                    + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
                    + "where Yearr between ? and ? and DisasterType = ?";

            String query7 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
                    + "from Disaster\n"
                    + "inner join Casuality\n"
                    + "on Disaster.DisasterId=casuality.DisasterId\n"
                    + "\n"
                    + "inner join ReliefAid\n"
                    + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
                    + "\n"
                    + "inner join Details\n"
                    + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
                    + "where Yearr = ? and RegionName = ?";

            String query8 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
                    + "from Disaster\n"
                    + "inner join Casuality\n"
                    + "on Disaster.DisasterId=casuality.DisasterId\n"
                    + "\n"
                    + "inner join ReliefAid\n"
                    + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
                    + "\n"
                    + "inner join Details\n"
                    + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
                    + "where Yearr = ? and DisasterType = ?";

            String query9 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
                    + "from Disaster\n"
                    + "inner join Casuality\n"
                    + "on Disaster.DisasterId=casuality.DisasterId\n"
                    + "\n"
                    + "inner join ReliefAid\n"
                    + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
                    + "\n"
                    + "inner join Details\n"
                    + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
                    + "where RegionName = ? and DisasterType = ?";

            String query10 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
                    + "from Disaster\n"
                    + "inner join Casuality\n"
                    + "on Disaster.DisasterId=casuality.DisasterId\n"
                    + "\n"
                    + "inner join ReliefAid\n"
                    + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
                    + "\n"
                    + "inner join Details\n"
                    + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
                    + "where Yearr = ? and RegionName = ? and DisasterType=?";

            String query11 = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
                    + "from Disaster\n"
                    + "inner join Casuality\n"
                    + "on Disaster.DisasterId=casuality.DisasterId\n"
                    + "\n"
                    + "inner join ReliefAid\n"
                    + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
                    + "\n"
                    + "inner join Details\n"
                    + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n"
                    + "where Yearr between ? and ? and RegionName=? and DisasterType = ?";

            PreparedStatement pst1 = connection.prepareStatement(query1);

           
            pst1.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));

            PreparedStatement pst2 = connection.prepareStatement(query2);
           
            pst2.setString(1, String.valueOf(searchTextFieldRegion.getText().toString()));
            
            

            PreparedStatement pst3 = connection.prepareStatement(query3);
            
            pst3.setString(1, String.valueOf(searchTextFieldDisasterType.getText().toString()));
            
            

            PreparedStatement pst4 = connection.prepareStatement(query4);
            
            pst4.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));
            pst4.setString(2, String.valueOf(searchTextFieldYearRange2.getText().toString()));
            
            

            PreparedStatement pst5 = connection.prepareStatement(query5);
              
            
            pst5.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));
            pst5.setString(2, String.valueOf(searchTextFieldYearRange2.getText().toString()));
            pst5.setString(3, String.valueOf(searchTextFieldRegion.getText().toString()));

            PreparedStatement pst6 = connection.prepareStatement(query6);
            pst6.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));
            pst6.setString(2, String.valueOf(searchTextFieldYearRange2.getText().toString()));
            pst6.setString(3, String.valueOf(searchTextFieldDisasterType.getText().toString()));

            PreparedStatement pst7 = connection.prepareStatement(query7);
            pst7.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));
            pst7.setString(2, String.valueOf(searchTextFieldRegion.getText().toString()));

            PreparedStatement pst8 = connection.prepareStatement(query8);
            pst8.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));
            pst8.setString(2, String.valueOf(searchTextFieldDisasterType.getText().toString()));

            PreparedStatement pst9 = connection.prepareStatement(query9);
            pst9.setString(1, String.valueOf(searchTextFieldRegion.getText().toString()));
            pst9.setString(2, String.valueOf(searchTextFieldDisasterType.getText().toString()));

            PreparedStatement pst10 = connection.prepareStatement(query10);
            pst10.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));
            pst10.setString(2, String.valueOf(searchTextFieldRegion.getText().toString()));
            pst10.setString(3, String.valueOf(searchTextFieldDisasterType.getText().toString()));

            PreparedStatement pst11 = connection.prepareStatement(query11);
            pst11.setString(1, String.valueOf(searchTextFieldYearRange1.getText().toString()));
            pst11.setString(2, String.valueOf(searchTextFieldYearRange2.getText().toString()));
            pst11.setString(3, String.valueOf(searchTextFieldRegion.getText().toString()));
            pst11.setString(4, String.valueOf(searchTextFieldDisasterType.getText().toString()));

            ResultSet rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11;

            rs1 = pst1.executeQuery();
            rs2 = pst2.executeQuery();
            rs3 = pst3.executeQuery();
            rs4 = pst4.executeQuery();
            rs5 = pst5.executeQuery();
            rs6 = pst6.executeQuery();
            rs7 = pst7.executeQuery();
            rs8 = pst8.executeQuery();
            rs9 = pst9.executeQuery();
            rs10 = pst10.executeQuery();
            rs11 = pst11.executeQuery();

            Show show1, show2, show3, show4, show5, show6, show7, show8, show9, show10, show11;

            if (q == 1) {
                while (rs1.next()) {

                    show1 = new Show(rs1.getInt("Id"), rs1.getString("DisasterName"), rs1.getString("DisasterType"), rs1.getString("RegionName"), rs1.getInt("Injured"), rs1.getInt("Missing"), rs1.getInt("Death"), rs1.getFloat("TotalAmount"), rs1.getInt("ContributingCountries"), rs1.getInt("Yearr"), rs1.getFloat("EconomicDamage"));
                    list.add(show1);

                }
            }

            if (q == 2) {
                while (rs2.next()) {

                    show2 = new Show(rs2.getInt("Id"), rs2.getString("DisasterName"), rs2.getString("DisasterType"), rs2.getString("RegionName"), rs2.getInt("Injured"), rs2.getInt("Missing"), rs2.getInt("Death"), rs2.getFloat("TotalAmount"), rs2.getInt("ContributingCountries"), rs2.getInt("Yearr"), rs2.getFloat("EconomicDamage"));
                    list.add(show2);
                }
            }

            if (q == 3) {
                while (rs3.next()) {

                    show3 = new Show(rs3.getInt("Id"), rs3.getString("DisasterName"), rs3.getString("DisasterType"), rs3.getString("RegionName"), rs3.getInt("Injured"), rs3.getInt("Missing"), rs3.getInt("Death"), rs3.getFloat("TotalAmount"), rs3.getInt("ContributingCountries"), rs3.getInt("Yearr"), rs3.getFloat("EconomicDamage"));
                    list.add(show3);
                }

            }

            if (q == 4) {
                while (rs4.next()) {

                    show4 = new Show(rs4.getInt("Id"), rs4.getString("DisasterName"), rs4.getString("DisasterType"), rs4.getString("RegionName"), rs4.getInt("Injured"), rs4.getInt("Missing"), rs4.getInt("Death"), rs4.getFloat("TotalAmount"), rs4.getInt("ContributingCountries"), rs4.getInt("Yearr"), rs4.getFloat("EconomicDamage"));
                    list.add(show4);
                }

            }

            if (q == 5) {
                while (rs5.next()) {

                    show5 = new Show(rs5.getInt("Id"), rs5.getString("DisasterName"), rs5.getString("DisasterType"), rs5.getString("RegionName"), rs5.getInt("Injured"), rs5.getInt("Missing"), rs5.getInt("Death"), rs5.getFloat("TotalAmount"), rs5.getInt("ContributingCountries"), rs5.getInt("Yearr"), rs5.getFloat("EconomicDamage"));
                    list.add(show5);
                }

            }

            if (q == 6) {
                while (rs6.next()) {

                    show6 = new Show(rs6.getInt("Id"), rs6.getString("DisasterName"), rs6.getString("DisasterType"), rs6.getString("RegionName"), rs6.getInt("Injured"), rs6.getInt("Missing"), rs6.getInt("Death"), rs6.getFloat("TotalAmount"), rs6.getInt("ContributingCountries"), rs6.getInt("Yearr"), rs6.getFloat("EconomicDamage"));
                    list.add(show6);
                }

            }

            if (q == 7) {
                while (rs7.next()) {

                    show7 = new Show(rs7.getInt("Id"), rs7.getString("DisasterName"), rs7.getString("DisasterType"), rs7.getString("RegionName"), rs7.getInt("Injured"), rs7.getInt("Missing"), rs7.getInt("Death"), rs7.getFloat("TotalAmount"), rs7.getInt("ContributingCountries"), rs7.getInt("Yearr"), rs7.getFloat("EconomicDamage"));
                    list.add(show7);
                }

            }

            if (q == 8) {
                while (rs8.next()) {

                    show8 = new Show(rs8.getInt("Id"), rs8.getString("DisasterName"), rs8.getString("DisasterType"), rs8.getString("RegionName"), rs8.getInt("Injured"), rs8.getInt("Missing"), rs8.getInt("Death"), rs8.getFloat("TotalAmount"), rs8.getInt("ContributingCountries"), rs8.getInt("Yearr"), rs8.getFloat("EconomicDamage"));
                    list.add(show8);
                }

            }

            if (q == 9) {
                while (rs9.next()) {

                    show9 = new Show(rs9.getInt("Id"), rs9.getString("DisasterName"), rs9.getString("DisasterType"), rs9.getString("RegionName"), rs9.getInt("Injured"), rs9.getInt("Missing"), rs9.getInt("Death"), rs9.getFloat("TotalAmount"), rs9.getInt("ContributingCountries"), rs9.getInt("Yearr"), rs9.getFloat("EconomicDamage"));
                    list.add(show9);
                }

            }

            if (q == 10) {
                while (rs10.next()) {

                    show10 = new Show(rs10.getInt("Id"), rs10.getString("DisasterName"), rs10.getString("DisasterType"), rs10.getString("RegionName"), rs10.getInt("Injured"), rs10.getInt("Missing"), rs10.getInt("Death"), rs10.getFloat("TotalAmount"), rs10.getInt("ContributingCountries"), rs10.getInt("Yearr"), rs10.getFloat("EconomicDamage"));
                    list.add(show10);
                }

            }

            if (q == 11) {
                while (rs11.next()) {

                    show11 = new Show(rs11.getInt("Id"), rs11.getString("DisasterName"), rs11.getString("DisasterType"), rs11.getString("RegionName"), rs11.getInt("Injured"), rs11.getInt("Missing"), rs11.getInt("Death"), rs11.getFloat("TotalAmount"), rs11.getInt("ContributingCountries"), rs11.getInt("Yearr"), rs11.getFloat("EconomicDamage"));
                    list.add(show11);
                }

            }

            DefaultTableModel model = (DefaultTableModel) Show_User_Table.getModel();
            model.setRowCount(0);
            Object[] row = new Object[11];

            for (int i = 0; i < list.size(); i++) {

                row[0] = list.get(i).getId();
                row[1] = list.get(i).getDisasterName();
                row[2] = list.get(i).getDisasterType();
                row[3] = list.get(i).getRegionName();
                row[4] = list.get(i).getInjured();
                row[5] = list.get(i).getMissing();
                row[6] = list.get(i).getDeath();
                row[7] = list.get(i).getTotalAmount();
                row[8] = list.get(i).getContributingCountries();
                row[9] = list.get(i).getYearr();
                row[10] = list.get(i).getEconomicDamage();

                model.addRow(row);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_searchButtonActionPerformed

    private void SelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectorActionPerformed
        // TODO add your handling code here:

        String select = Selector.getSelectedItem().toString();
        if (select == "Year") {

            q = 1;
                
              

        }

        if (select == "Region") {

            q = 2;
                

        } else if (select == "Type") {

            q = 3;

        } else if (select == "Year-Year") {

            q = 4;

        } else if (select == "Year-Year-Region") {

            q = 5;

        } else if (select == "Year-Year-Type") {

            q = 6;

        } else if (select == "Year-Region") {

            q = 7;

        } else if (select == "Year-Type") {

            q = 8;

        } else if (select == "Region-Type") {

            q = 9;

        } else if (select == "Year-Region-Type") {

            q = 10;

        } else if (select == "Year-Year-Region-Type") {

            q = 11;

        }


    }//GEN-LAST:event_SelectorActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:

        // TODO add your handling code here:
               

        
        searchTextFieldYearRange1.setText("");
        
         searchTextFieldYearRange2.setText("");
        
         searchTextFieldRegion.setText("");
       
        searchTextFieldDisasterType.setText("");
     
        Selector.setSelectedIndex(0);

        ArrayList<Show> list = null;
        list = new ArrayList<Show>();

        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=DisasterManagement;selectMethod=cursor", "TestingUser", "jishan");

            String query = "select Id,DisasterName,DisasterType,RegionName,Injured,Missing,Death,TotalAmount,ContributingCountries,Yearr,EconomicDamage\n"
                    + "from Disaster\n"
                    + "inner join Casuality\n"
                    + "on Disaster.DisasterId=casuality.DisasterId\n"
                    + "\n"
                    + "inner join ReliefAid\n"
                    + "on Casuality.CasualityId=ReliefAid.CasualityId\n"
                    + "\n"
                    + "inner join Details\n"
                    + "on ReliefAid.ReliefAidId=Details.ReliefAidId\n";

            PreparedStatement pst = connection.prepareStatement(query);

            ResultSet rs;
            rs = pst.executeQuery();

            Show show;

            while (rs.next()) {
                show = new Show(rs.getInt("Id"), rs.getString("DisasterName"), rs.getString("DisasterType"), rs.getString("RegionName"), rs.getInt("Injured"), rs.getInt("Missing"), rs.getInt("Death"), rs.getFloat("TotalAmount"), rs.getInt("ContributingCountries"), rs.getInt("Yearr"), rs.getFloat("EconomicDamage"));
                list.add(show);

            }

            DefaultTableModel model = (DefaultTableModel) Show_User_Table.getModel();
            model.setRowCount(0);
            Object[] row = new Object[11];

            for (int i = 0; i < list.size(); i++) {

                row[0] = list.get(i).getId();
                row[1] = list.get(i).getDisasterName();
                row[2] = list.get(i).getDisasterType();
                row[3] = list.get(i).getRegionName();
                row[4] = list.get(i).getInjured();
                row[5] = list.get(i).getMissing();
                row[6] = list.get(i).getDeath();

                row[7] = list.get(i).getTotalAmount();
                row[8] = list.get(i).getContributingCountries();
                row[9] = list.get(i).getYearr();
                row[10] = list.get(i).getEconomicDamage();

                model.addRow(row);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_clearButtonActionPerformed

    private void IDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IDKeyTyped
        // TODO add your handling code here:


    }//GEN-LAST:event_IDKeyTyped

    private void searchTextFieldYearRange1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange1FocusGained
        // TODO add your handling code here:
        
        
         if (Year1Label.getText().toLowerCase().equals("       year")) {
           Year1Label.setText("");
            Year1Label.setForeground(Color.black);

        }
       

    }//GEN-LAST:event_searchTextFieldYearRange1FocusGained

    private void searchTextFieldYearRange1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange1FocusLost
        // TODO add your handling code here:
        
         
        if (Year1Label.getText().equals("") || Year1Label.getText().toLowerCase().equals("       year")) {
            Year1Label.setText("       Year");
            Year1Label.setForeground(new Color(153, 153, 153));
        }
        

    }//GEN-LAST:event_searchTextFieldYearRange1FocusLost

    private void searchTextFieldYearRange2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange2FocusGained
        // TODO add your handling code here:

        if (Year2Label.getText().toLowerCase().equals("       year")) {
           Year2Label.setText("");
            Year2Label.setForeground(Color.black);

        }


    }//GEN-LAST:event_searchTextFieldYearRange2FocusGained

    private void searchTextFieldYearRange2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange2FocusLost
        // TODO add your handling code here:
        if (Year2Label.getText().equals("") || searchTextFieldYearRange1.getText().toLowerCase().equals("       year")) {
            Year2Label.setText("       Year");
            Year2Label.setForeground(new Color(153, 153, 153));
        }


    }//GEN-LAST:event_searchTextFieldYearRange2FocusLost

    private void searchTextFieldRegionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldRegionFocusGained
        // TODO add your handling code here:
        if (RegionLabel.getText().toLowerCase().equals("     region")) {
            RegionLabel.setText("");
            RegionLabel.setForeground(Color.black);

        }

    }//GEN-LAST:event_searchTextFieldRegionFocusGained

    private void searchTextFieldRegionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldRegionFocusLost
        // TODO add your handling code here:

        if (RegionLabel.getText().equals("") || searchTextFieldRegion.getText().toLowerCase().equals("     region")) {
            RegionLabel.setText("     Region");
            RegionLabel.setForeground(new Color(153, 153, 153));
        }

    }//GEN-LAST:event_searchTextFieldRegionFocusLost

    private void searchTextFieldDisasterTypeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldDisasterTypeFocusGained
        // TODO add your handling code here:

        if (TypeLabel.getText().toLowerCase().equals("       type")) {
            TypeLabel.setText("");
            TypeLabel.setForeground(Color.black);

        }

    }//GEN-LAST:event_searchTextFieldDisasterTypeFocusGained

    private void searchTextFieldDisasterTypeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldDisasterTypeFocusLost
        // TODO add your handling code here:

        if (TypeLabel.getText().equals("") || searchTextFieldDisasterType.getText().toLowerCase().equals("type")) {
            TypeLabel.setText("       Type");
            TypeLabel.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_searchTextFieldDisasterTypeFocusLost

    private void FrontPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FrontPageButtonActionPerformed
        // TODO add your handling code here:
        FrontPage fp = new FrontPage();
        fp.setVisible(true);
        setVisible(false);

    }//GEN-LAST:event_FrontPageButtonActionPerformed

    private void backFromMainAdminPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFromMainAdminPageButtonActionPerformed
        // TODO add your handling code here:
        loginAsAdmin laa = new loginAsAdmin();
        laa.setVisible(true);
        setVisible(false);

    }//GEN-LAST:event_backFromMainAdminPageButtonActionPerformed

    private void searchTextFieldYearRange1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextFieldYearRange1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextFieldYearRange1MouseClicked

    private void Year1LabelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Year1LabelFocusGained
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_Year1LabelFocusGained

    private void Year1LabelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Year1LabelFocusLost
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_Year1LabelFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainAdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainAdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainAdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainAdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainAdminPage().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CasualityId;
    private javax.swing.JTextField ContributingCountries;
    private javax.swing.JTextField Death;
    private javax.swing.JLabel Disaster;
    private javax.swing.JTextField DisasterName;
    private javax.swing.JTextField EconomicDamage;
    private javax.swing.JButton FrontPageButton;
    private javax.swing.JTextField ID;
    private javax.swing.JTextField Injured;
    private javax.swing.JCheckBox Manmade;
    private javax.swing.JTextField Missing;
    private javax.swing.JCheckBox Natural;
    private javax.swing.JLabel RegionLabel;
    private javax.swing.JTextField RegionName;
    private javax.swing.JTextField ReliefAidId;
    private javax.swing.JComboBox<String> Selector;
    private javax.swing.JTable Show_User_Table;
    private javax.swing.JTextField TotalAmount;
    private javax.swing.JLabel TypeLabel;
    private javax.swing.JComboBox<String> Year;
    private javax.swing.JLabel Year1Label;
    private javax.swing.JLabel Year2Label;
    private javax.swing.JButton backFromMainAdminPageButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextFieldDisasterType;
    private javax.swing.JTextField searchTextFieldRegion;
    private javax.swing.JTextField searchTextFieldYearRange1;
    private javax.swing.JTextField searchTextFieldYearRange2;
    private javax.swing.JButton showButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

}
